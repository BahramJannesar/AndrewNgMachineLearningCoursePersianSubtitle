WEBVTT

1
00:00:00.000 --> 00:00:04.162
In this video, I want to just quickly step you
through the logistics of how to work on

2
00:00:04.162 --> 00:00:09.387
homeworks in this class and how to use the
submission system which will let you verify

3
00:00:09.387 --> 00:00:15.619
right away that you got the right answer for
your machine learning program exercise.

4
00:00:15.619 --> 00:00:19.354
Here's my Octave window and
let's first go to my desktop.

5
00:00:19.354 --> 00:00:25.374
I saved the files for my first exercise,
some of the files on my desktop:

6
00:00:25.374 --> 00:00:27.994
in this directory, 'ml-class-ex1'.

7
00:00:27.994 --> 00:00:32.921
And we provide a number files
and ask you to edit some of them.

8
00:00:32.921 --> 00:00:40.701
So the first file should meet the details in
the pdf file for this programming exercise.

9
00:00:40.701 --> 00:00:45.352
But one of the files we ask you to edit is
this file called warmUpExercise.m, where the

10
00:00:45.352 --> 00:00:49.890
exercise is really just to make sure that
you're familiar with the submission system.

11
00:00:49.890 --> 00:00:53.795
And all you need to do is
return the 5x5 identity matrix.

12
00:00:53.795 --> 00:01:00.301
So the solution to this exercise I just
showed you is to write A = eye(5).

13
00:01:00.301 --> 00:01:05.766
So that modifies this function to
generate the 5x5 identity matrix.

14
00:01:05.766 --> 00:01:11.149
And this function warmUpExercise()
now returns the 5x5 identity matrix.

15
00:01:11.149 --> 00:01:13.727
And I'm just going to save it.

16
00:01:13.727 --> 00:01:17.465
So I've done the first part of this homework.
Going back to my Octave window,

17
00:01:17.465 --> 00:01:27.185
let's now go to my directory,
'C:\Users\ang\Desktop\ml-class-ex1'.

18
00:01:27.185 --> 00:01:33.347
And if I want to make sure that I've implemented
this, type 'warmUpExercise()' like so.

19
00:01:33.347 --> 00:01:39.671
And yup, it returns the 5x5 identity matrix
that we just wrote the code to create.

20
00:01:39.671 --> 00:01:43.870
And I can now submit the code as follows.
I'm going to type 'submit()' in this

21
00:01:43.870 --> 00:01:49.300
directory and I'm ready to submit part 1
so I'm going to enter choice '1'.

22
00:01:49.300 --> 00:01:54.387
So it asks me for my email address.
I'm going go to the course website.

23
00:01:54.387 --> 00:01:59.682
This is an internal testing site, so your version
of the website may look a little bit different.

24
00:01:59.682 --> 00:02:07.934
But that's my email address and this is my submission
password, and I'm just going to type them in here.

25
00:02:07.934 --> 00:02:19.205
So I have ang@cs.stanford.edu and
my submission password is 9yC75USsGf.

26
00:02:19.205 --> 00:02:23.849
I'm going to hit enter; it connects to the server
and submits it, and right away

27
00:02:23.849 --> 00:02:28.567
it tells you "Congratulations! You have
successfully completed Homework 1 Part 1".

28
00:02:28.567 --> 00:02:33.160
And this gives you a verification
that you got this part right.

29
00:02:33.160 --> 00:02:36.795
And if you don't submit the right answer,
then it will give you a message indicating

30
00:02:36.795 --> 00:02:39.501
that you haven't quite gotten it right yet.

31
00:02:39.501 --> 00:02:47.861
And you can use this submission password and
you can generate new passwords; it doesn't matter.

32
00:02:47.861 --> 00:02:52.556
But you can also use your regular website
login password, but because this password

33
00:02:52.556 --> 00:02:59.281
here is typed in clear text on your monitor,
we gave you this extra submission password

34
00:02:59.281 --> 00:03:03.650
in case you don't want to type in your
website's normal password onto a window

35
00:03:03.650 --> 00:03:09.219
that, depending on your operating system,
may or may not appear as text when you type

36
00:03:09.219 --> 00:03:14.544
it into the Octave submission script.

37
00:03:14.544 --> 00:03:18.746
So, that's how you submit the
homeworks after you've done it.

38
00:03:18.746 --> 00:03:23.696
Good luck, and, when you get around to
homeworks, I hope you get all of them right.

39
00:03:23.696 --> 00:03:28.329
And finally, in the next and final Octave
tutorial video, I want to tell you about

40
00:03:28.329 --> 00:03:33.337
vectorization, which is a way to get your
Octave code to run much more efficiently.